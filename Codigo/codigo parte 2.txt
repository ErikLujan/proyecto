// Contador con Interruptor Deslizante y Números Primos
#define A 10
#define B 11
#define C 5
#define D 6
#define E 7
#define F 9
#define G 8

#define TEMPERATURA A0
#define INTERRUPTOR 3

#define UNIDAD A4
#define DECENA A5

int estadoInterruptor; 
int contador = 0;
int umbralTemperatura = 225;

void setup()
{
  // Configura los pines del interruptor y temperatura como entrada
  pinMode(TEMPERATURA, INPUT);
  pinMode(INTERRUPTOR, INPUT);
  
  // Configura los pines de los displays como salida
  for(int i = 0; i <= 12 ; i++)
  {
    pinMode(i, OUTPUT);
  }
  
  // Inicializa los displays apagados
  pinMode(UNIDAD, OUTPUT);
  pinMode(DECENA, OUTPUT);
  digitalWrite(UNIDAD, LOW);
  digitalWrite(DECENA, LOW);
  
  // Muestra el dígito 0 en el inicio
  MostrarDigito(0);
}

void loop()
{
  estadoInterruptor = digitalRead(INTERRUPTOR);
  int lecturaTemperatura = analogRead(TEMPERATURA);
 
  if (lecturaTemperatura > umbralTemperatura)
  {
    ApagarDisplay();
  }
  else 
  {
    if (estadoInterruptor == HIGH)
    {
      for (int i = 0; i <= 99; i++)
      {
        MostrarContador(i); // Muestra números del 0 al 99
        estadoInterruptor = digitalRead(INTERRUPTOR);
        if (estadoInterruptor == LOW)
        {
          break;
        }
      }
    }
    else
    {
      for (int i = 0; i <= 99; i++)
      {
        if (esPrimo(i))
        {
          MostrarContador(i); // Muestra los numeros primos entre 0 y 99
        }
        estadoInterruptor = digitalRead(INTERRUPTOR);
        if (estadoInterruptor == HIGH)
        {
          break;
        }
      }
    }
  }
}

bool esPrimo(int numero) {
  // Comprueba si el número es menor o igual a 1, que no se considera primo.
  if (numero <= 1) {
    return false; // Retorna falso si el número es 0 o 1.
  }
  // Comprueba si el número es divisible por cualquier valor desde 2 hasta la raíz cuadrada del número.
  for (int i = 2; i * i <= numero; i++) {
    if (numero % i == 0) {
      return false; // Retorna falso si el número es divisible por algún valor en ese rango.
    }
  }
  // Si no se encontraron divisores en el rango, el número se considera primo y retorna verdadero.
  return true;
}


void ApagarDisplay()// Apaga todos los leds de los display
{
  apagarLeds(A);
  apagarLeds(B);
  apagarLeds(C);
  apagarLeds(D);
  apagarLeds(E);
  apagarLeds(F);
  apagarLeds(G);
}

void MostrarDigito(int digito)
{
  // Apaga los displays y muestra el dígito especificado
  ApagarDisplay();
  switch(digito)
  {
    case 0:
      numeroCero();
      break;
    case 1:
      numeroUno();
      break;
    case 2:
      numeroDos();
      break;
    case 3:
      numeroTres();
      break;
    case 4:
      numeroCuatro();
      break;
    case 5:
      numeroCinco();
      break;
    case 6:
      numeroSeis();
      break;
    case 7:
      numeroSiete();
      break;
    case 8:
      numeroOcho();
      break;
    case 9:
      numeroNueve();
      break;
  }
}

void prenderDigito(int digito)
{
  // Enciende el display adecuado y apaga el otro
  if (digito == UNIDAD)
  {
    digitalWrite(UNIDAD, LOW);
    digitalWrite(DECENA, HIGH);
  }
  else if (digito == DECENA)
  {
    digitalWrite(UNIDAD, HIGH);
    digitalWrite(DECENA, LOW);
  }
  else
  {
    digitalWrite(UNIDAD, HIGH);
    digitalWrite(DECENA, HIGH);
  }
}


void MostrarContador(int contador)
{
  ApagarDisplay();
  prenderDigito(UNIDAD);
  MostrarDigito(contador % 10);
  delay(175);
  ApagarDisplay();
  prenderDigito(DECENA);
  MostrarDigito(contador / 10);
  delay(200);
}

void encenderLeds(int pin)
{
  // Enciende un led conectado al pin correspondiente
  digitalWrite(pin, HIGH);
}

void apagarLeds(int pin)
{
  // Apaga un led conectado al pin correspondiente
  digitalWrite(pin, LOW);
}

// Funciones para mostrar números en los displays
void numeroCero(void){
  apagarLeds(G);
  encenderLeds(A);
  encenderLeds(B);
  encenderLeds(C);
  encenderLeds(D);
  encenderLeds(E);
  encenderLeds(F);
}

void numeroUno(void){
  apagarLeds(A);
  apagarLeds(D);
  apagarLeds(E);
  apagarLeds(F);
  apagarLeds(G);
  encenderLeds(B);
  encenderLeds(C);
}

void numeroDos(void){
  apagarLeds(C);
  apagarLeds(F);
  encenderLeds(A);
  encenderLeds(B);
  encenderLeds(D);
  encenderLeds(E);
  encenderLeds(G); 	
}

void numeroTres(void){
  apagarLeds(E);
  apagarLeds(F);	
  encenderLeds(A);
  encenderLeds(B);
  encenderLeds(C);
  encenderLeds(D);
  encenderLeds(G);
}

void numeroCuatro(void){
  apagarLeds(A);
  apagarLeds(D);
  apagarLeds(E);
  encenderLeds(B);
  encenderLeds(C);
  encenderLeds(F);
  encenderLeds(G);
}

void numeroCinco(void) {
  apagarLeds(B);
  apagarLeds(E);
  encenderLeds(A);
  encenderLeds(C);
  encenderLeds(D);
  encenderLeds(F);
  encenderLeds(G);
}

void numeroSeis(void) {
  apagarLeds(B);
  encenderLeds(A);
  encenderLeds(C);
  encenderLeds(D);
  encenderLeds(E);
  encenderLeds(F);
  encenderLeds(G);
}

void numeroSiete(void){
  apagarLeds(D);
  apagarLeds(E);
  apagarLeds(F);
  apagarLeds(G);
  encenderLeds(A);
  encenderLeds(B);
  encenderLeds(C);
}

void numeroOcho(void){
  encenderLeds(A);
  encenderLeds(B);
  encenderLeds(C);
  encenderLeds(D);
  encenderLeds(E);
  encenderLeds(F);
  encenderLeds(G);
}

void numeroNueve(void) {
  apagarLeds(E);
  encenderLeds(A);
  encenderLeds(B);
  encenderLeds(C);
  encenderLeds(D);
  encenderLeds(F);
  encenderLeds(G);
}